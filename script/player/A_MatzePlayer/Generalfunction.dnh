//INFO Playingwindow is (32, 16, 416, 464)

function wait (n)
{
	loop (n)
	{
	yield;
	}
}

function GetPointAngle(x1,y1,x2,y2)
{
     let angle=atan2(y1-y2,x1-x2);
     return angle;
}

function GetDistance(x1,y1,x2,y2)
{
     return(((x2-x1)^2+(y2-y1)^2)^(1/2));
}

function WaitForZeroEnemy
{
     while(length(GetAllEnemyID()) > 0){yield;}
}

function WaitForZeroHitboxEnemy
{
     while(length(GetIntersectionRegistedEnemyID()) > 0){yield;}
}

function rand_int(min, max)
{
     return round(rand(min, max))
}

task Autodelete(obj)
{
	while(ObjRender_GetX(obj)>=-64&&ObjRender_GetX(obj)<=GetStgFrameWidth()+64&&ObjRender_GetY(obj)>=-64&&ObjRender_GetY(obj)<=GetStgFrameHeight()+64){yield;}
	Obj_Delete(obj);
}

task DeleteDelay(obj,n)
{
	loop(n){yield;}
	Obj_Delete(obj);
}

task FadeDeleteDelay(obj,n,n2)
{
	let alpha=255;
	let alpha1=alpha/n2;
	loop(n){yield;}
	loop(n2)
	{
	ObjRender_SetAlpha(obj,alpha);
	alpha-=alpha1;
	yield;
	}
	Obj_Delete(obj);
}

task DeleteAllBullets(n)
{
	loop(n)
	{
		DeleteShotAll(TYPE_ALL, TYPE_IMMEDIATE);
		yield;
	}
}

function CreateTestCounter(x, y)//Creates a simple Textobj to use it as a debug field
{
	let obj = ObjText_Create;
	ObjText_SetFontSize(obj, 20);
	ObjRender_SetPosition(obj, x, y, 0);
	Obj_SetRenderPriorityI(obj, 79);
	return obj;
}

function MyStageID { return GetCommonData("Main Stage Script ID", 0); }

let CSD=GetCurrentScriptDirectory();
let GetCenterX = GetStgFrameWidth/2;
let GetCenterY = GetStgFrameHeight/2;
let GetFullCenterX =640/2;
let GetFullCenterY =480/2;
function GetAngleTo(let object1, let object2) { return atan2(ObjRender_GetY(object2)-ObjRender_GetY(object1), ObjRender_GetX(object2)-ObjRender_GetX(object1));}

function CO_GetAngleToObjectMove(x,y,obj){
	let angle = atan2(ObjMove_GetY(obj)-y,ObjMove_GetX(obj)-x);
	return angle;
}