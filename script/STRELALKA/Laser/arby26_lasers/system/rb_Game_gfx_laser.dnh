//Rendering things that are alike with a sprite list, per frame, seems faster than having separate sprite objects.

let myLas=ID_INVALID;
let myLasA=ID_INVALID;

task InitLaserGfx(img){
	if(myLas!=ID_INVALID){Obj_Delete(myLas);}
	myLas = ObjPrim_Create(OBJ_SPRITE_LIST_2D);
	ObjPrim_SetTexture(myLas, img);
	Obj_SetRenderPriorityI(myLas, GetShotRenderPriorityI);

	if(myLasA!=ID_INVALID){Obj_Delete(myLasA);}
	myLasA = ObjPrim_Create(OBJ_SPRITE_LIST_2D);
	ObjPrim_SetTexture(myLasA, img);
	ObjRender_SetBlendType(myLasA, BLEND_ADD_RGB);
	Obj_SetRenderPriorityI(myLasA, GetShotRenderPriorityI);

	while(true)
	{
		ObjSpriteList2D_ClearVertexCount(myLas);
		ObjSpriteList2D_ClearVertexCount(myLasA);
		yield;
	}
}
task RemoveLaserGfx{
	Obj_Delete(myLas);
	myLas=ID_INVALID;

	Obj_Delete(myLasA);
	myLasA=ID_INVALID;
}

task LaserGfxFrame(f, x,y, ang, sx,sy, rd,gn,bl,al){
	if(myLas==ID_INVALID){return;}

	f=f*16;
	ObjRender_SetPosition(myLas, x,y,0);
	ObjRender_SetAngleZ(myLas, ang);
	ObjRender_SetScaleXYZ(myLas, sx,sy,1);
	ObjRender_SetColor(myLas, rd,gn,bl);
	ObjRender_SetAlpha(myLas, al);
	//ObjSpriteList2D_SetSourceRect(myLas, 1+f, 1, 16+f, 16);
	ObjSpriteList2D_SetSourceRect(myLas, 257+f, 545, 272+f, 560);
	//ObjSpriteList2D_SetSourceRect(myLas, u, v, u2, v2);
	ObjSpriteList2D_SetDestCenter(myLas);
	//ObjSpriteList2D_SetDestRect(myLas, -8*sx,-8*sy, 8*sx,8*sy);
	ObjSpriteList2D_AddVertex(myLas);
}
task LaserGfxFrameA(f, x,y, ang, sx,sy, rd,gn,bl,al){
	if(myLasA==ID_INVALID){return;}

	f=f*16;
	ObjRender_SetPosition(myLasA, x,y,0);
	ObjRender_SetAngleZ(myLasA, ang);
	ObjRender_SetScaleXYZ(myLasA, sx,sy,1);
	ObjRender_SetColor(myLasA, rd,gn,bl);
	ObjRender_SetAlpha(myLasA, al);
	//ObjSpriteList2D_SetSourceRect(myLasA, 1+f, 1, 16+f, 16);
	ObjSpriteList2D_SetSourceRect(myLasA, 257+f, 545, 272+f, 560);
	//ObjSpriteList2D_SetDestRect(myLasA, -8*sx,-8*sy, 8*sx,8*sy);
	ObjSpriteList2D_SetDestCenter(myLasA);
	ObjSpriteList2D_AddVertex(myLasA);
}
task LaserGfxTipA(f, x,y, ang, sx,sy, rd,gn,bl,al){
	if(myLasA==ID_INVALID){return;}

	f=f*16;
	ObjRender_SetPosition(myLasA, x,y,0);
	ObjRender_SetAngleZ(myLasA, ang);
	ObjRender_SetScaleXYZ(myLasA, sx,sy,1);
	ObjRender_SetColor(myLasA, rd,gn,bl);
	ObjRender_SetAlpha(myLasA, al);
	ObjSpriteList2D_SetSourceRect(myLasA, 1+f, 1, 16+f, 16);
	//ObjSpriteList2D_SetSourceRect(myLasA, 257+f, 545, 272+f, 560);
	//ObjSpriteList2D_SetDestRect(myLasA, -8*sx,-8*sy, 8*sx,8*sy);
	ObjSpriteList2D_SetDestCenter(myLasA);
	ObjSpriteList2D_AddVertex(myLasA);
}
