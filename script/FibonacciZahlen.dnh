#TouhouDanmakufu[Plural]
#ScriptVersion[3]
#Title["Fibnoacci Zahlen"]
#Text["Fibnoacci Zahlen" ]
#System["./default_system/Default_System.txt"]

@Initialize
{
	MainTask;
}

@MainLoop
{
    yield;
}

@Event
{
    alternative(GetEventType())
	case(EV_USER) 
	{

	}
}

task MainTask
{
	//ZeigeFibonacciZahlen(n);
	//GetFibonacciZahl(n);
	///BerechneFibonacciZahlen(n);
	//GetGoldenerSchnitt(n);
	//ZeigeFibonacciZahlen(6);
	WriteLog(GetGoldeneSchnitt(1));
	WriteLog(GetGoldeneSchnitt(2));
	WriteLog(GetGoldeneSchnitt(3));
	WriteLog(GetGoldeneSchnitt(4));
	WriteLog(GetGoldeneSchnitt(5));
	WriteLog(GetGoldeneSchnitt(20));
	//WriteLog(BerechneFibonacciZahlen(4));
	//WriteLog(BerechneFibonacciZahlen(9));
	//WriteLog(BerechneFibonacciZahlen(22));
	CloseScript(GetOwnScriptID());
}

function GetGoldeneSchnitt(number)
{
	if(number <= 2){return -1;}

	let n1 = 1;
	let n2 = 1;
	let temp = 0;

	let counter = 2;

	while(counter < number)
	{
		counter++;
		temp = n1 + n2;
		n1 = n2;
		n2 = temp;
	}
	return n2 / n1;
}

function GetFibonacciZahl(number)
{
	if(number < 1) {return -1;}
	else if(number == 1) {return 0;}
	else if(number == 2) {return 1;}

	let n1 = 0;
	let n2 = 1;
	let temp = 0;

	let counter = 2;

	while(counter < number)
	{
		counter++;
		temp = n1 + n2;
		n1 = n2;
		n2 = temp;
	}
	return n2;
}

function ZeigeFibonacciZahlen(number)
{
	if(number < 1) {return -1;}
	if(number > 1) {WriteLog(0);}
	if(number > 2) {WriteLog(1);}

	let n1 = 0;
	let n2 = 1;
	let temp = 0;

	let counter = 2;

	while(counter < number)
	{
		counter++;
		temp = n1 + n2;
		n1 = n2;
		n2 = temp;
		WriteLog(n2);
	}
}

function BerechneFibonacciZahlen(number)
{
	if(number < 0) {return -1;}
	if(number < 1) {return 1;}
	else if(number < 2) {return 3;}
	
	let n1 = 1;
	let n2 = 1;
	let temp = -1;
	let old = -1;

	let counter = 2;

	while(n1 < number)
	{
		counter++;
		old = n1;
		temp = n1 + n2;
		n1 = n2;
		n2 = temp;
	}
	return [counter - 1];
}

