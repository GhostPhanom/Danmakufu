/*
Colors
1 Darkred / Dunkelrot
2 Red / Rot
3 Purple / Lila
4 Pink / Pink
5 DarkBlue / Dunkelblau
6 Blue / Blau
7 Blue? / Blau?
8 Turquoise / Türkis
9 Dunkelgrün
10 Grün
11 gelbgrün
12 gelg
13 helles gelbgrün
14 orange
15 grau
16 weiß

ID 0-15 = Striche
ID 20-35 = LooseLaser
ID 40-55 = ScaleLaser
ID 60-75 = LooseLaser2
*/

#include"./Shotconstants.dnh"

function CreateDelayLaserAC2(x, y, angle, llength, lwidth, t, ID, growthtime)
{
	let alphawait = 10; 
	let obj = CreateStraightLaserA1(x, y, angle, 0, lwidth, t, ID, 0);
	ObjStLaser_SetSource(obj, false);
	ObjShot_SetIntersectionEnable(obj, false);
	Lasergrowth;
	CorrectAlpha;
	return obj;
	
	task Lasergrowth
	{
		let llength1 = llength / growthtime;
		let llength2 = 0;
		wait(alphawait);
		loop(t)
		{
			llength2 += llength1;
			ObjLaser_SetLength(obj, llength2);
			yield;
		}
	}
	
	task CorrectAlpha
	{
		let alpha = ObjRender_GetAlpha(obj);
		ObjRender_SetAlpha(obj, 0);
		wait(alphawait);
		ObjRender_SetAlpha(obj, alpha);
	}
	
}

function CreateDelayLaserA2(x, y, angle, llength, lwidth, t, ID, growthtime)
{
	let obj = CreateStraightLaserA1(x, y, angle, 0, lwidth, t, ID, 0);
	ObjStLaser_SetSource(obj, false);
	ObjShot_SetIntersectionEnable(obj, false);
	ObjRender_SetAlpha(obj, ObjRender_GetAlpha(obj));
	Lasergrowth;
	return obj;
	
	task Lasergrowth
	{
		let llength1 = llength / growthtime;
		let llength2 = 0;
		loop(t)
		{
			llength2 += llength1;
			ObjLaser_SetLength(obj, llength2);
			yield;
		}
	}
}

function CreateDelayLaserAC1(x, y, angle, llength, lwidth, t, ID)
{
	let alphawait = 10; 
	let obj = CreateStraightLaserA1(x, y, angle, llength, lwidth, t, ID, 0);
	ObjStLaser_SetSource(obj, false);
	ObjShot_SetIntersectionEnable(obj, false);
	CorrectAlpha;
	//Fadedelay(obj, t);
	return obj;
	
	task CorrectAlpha
	{
		let alpha = ObjRender_GetAlpha(obj);
		ObjRender_SetAlpha(obj, 0);
		wait(alphawait);
		ObjRender_SetAlpha(obj, alpha);
	}
	/*
	task Fadedelay(obj, t)
	{
		wait(t);
		let alpha2 = ObjRender_GetAlpha(obj);
		let alpha = alpha2 / fadetime;
		loop(t)
		{
			alpha2 -= alpha;
			ObjRender_SetAlpha(obj, alpha2);
			yield;
		}
		Obj_Delete(obj);
	}
	*/
}

function CreateDelayLaserA1(x, y, angle, llength, lwidth, t, ID)
{
	let obj = CreateStraightLaserA1(x, y, angle, llength, lwidth, t, ID, 0);
	ObjStLaser_SetSource(obj, false);
	ObjShot_SetIntersectionEnable(obj, false);
	ObjRender_SetAlpha(obj, ObjRender_GetAlpha(obj));
	return obj;
}
/*
function ObjRender_GetAlpha(obj){
	return Obj_GetValueD(obj, "ALPHA", 256);
}
*/